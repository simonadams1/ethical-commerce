buildscript {
	ext.kotlin_version = '1.3.11'

	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

plugins {
	id "org.jetbrains.kotlin.jvm" version "1.3.71"
	id "org.jlleitschuh.gradle.ktlint" version "10.0.0"
}

apply plugin: 'kotlin'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

group = 'app'
version = '1.0'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()

	jcenter()

	maven {
		url  "https://kotlin.bintray.com/kotlin-js-wrappers"
	}
}

dependencies {
	implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
	implementation "org.jetbrains.kotlin:kotlin-reflect"
	implementation 'io.javalin:javalin:3.13.4'
	implementation "org.postgresql:postgresql:42.2.2"
	implementation 'org.jetbrains.exposed:exposed:0.10.5'
	implementation "org.jetbrains.kotlinx:kotlinx-html-jvm:0.6.10"
	implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'
	implementation "org.slf4j:slf4j-simple:1.7.25"
	implementation "com.fasterxml.jackson.core:jackson-databind:2.10.3" // JSON serializer
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5'
}

jar {
	manifest {
		attributes(
				'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
				'Main-Class': 'app.ApplicationKt'
		)
	}

	// This line of code recursively collects and copies all of a project's files
	// and adds them to the JAR itself. One can extend this task, to skip certain
	// files or particular types at will
	from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

// for heroku
task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean